# Function read.input.files reads in REVA output files

read.input.files <- function(file.list, condition, normalized){
  upload = list()
  for(nr in 1:length(file.list[, 1])){
    data.df <- read.table(
      file = file.list[[nr, 'datapath']],
      sep = c("\t"),
      header = T,
      fill = T,
      quote = c(""),
      blank.lines.skip = T,
      strip.white = T,
      flush = T,
      allowEscapes = T,
      stringsAsFactors = F,
      skip = max(grep(pattern = "<!", readLines(file.list[[nr, 'datapath']]), value = FALSE)) - 1
    )
    names(data.df) <- gsub(pattern = "\\__.*", "", names(data.df))
    upload[[nr]] <- data.df
    names(upload)[[nr]] <- paste(condition, nr, sep = "_")
  }
  data.df <- bind_rows(upload, .id = "Condition") # append condition
  data.df[(ncol(data.df) - 2):(ncol(data.df) - 1)] <- NULL # remove meta information
  if(normalized){ # normalize to read per million (RPM) using ALL tally if user selected
    for(i in 4:(ncol(data.df) - 1)){
      data.df[2:nrow(data.df), i] <- (data.df[2:nrow(data.df), i]*1e6)/data.df[1, i]
    }
    return(data.df)
  } else {
    return(data.df)
  }
}
